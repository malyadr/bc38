pipeline {
    agent any
    environment {
        DOCKERHUB_CREDENTIALS=credentials('malyadr')
    }
    stages {
        stage('Docker Build') {
          steps {
            sh "cd backend/appliedjobs-service ; ls ; docker build --file Dockerfile -t ghcr.io/malyadr/apply:latest ."
            sh "cd backend/cloud-gateway ; ls ; docker build --file Dockerfile -t ghcr.io/malyadr/cloud:latest ."
      }
    }
    //     stage('Docker push') {
    //       steps {
    //         sh  "echo $DOCKERHUB_CREDENTIALS_PSW | docker login ghcr.io -u $DOCKERHUB_CREDENTIALS_USR --password-stdin; docker push ghcr.io/malyadr/mock:latest"
    //         sh "cd frontend ; ls ; docker build --file front.dockerfile -t ghcr.io/malyadr/frontend38:latest ."
    //         sh "docker push ghcr.io/malyadr/frontend38:latest"
            
    //   }
    // }
//         stage('Deploy ec2') {
//           steps {
//             sshagent(['ec2instance']) {
//             sh "ssh -o StrictHostKeyChecking=no ubuntu@ec2-3-144-250-150.us-east-2.compute.amazonaws.com ; docker pull ghcr.io/malyadr/mock:latest"
//             sh "docker run -d --name mock -p 8085:8080 ghcr.io/malyadr/mock:latest "
//             sh "docker pull ghcr.io/malyadr/frontend38:latest"
//             sh "docker run -d --name frontend -p 4000:4000 --link mock:mock ghcr.io/malyadr/frontend38:latest"
            
//       }
//     }

//   } 
//         stage('Deploy to eks') {
//           steps {
//             script{
//               sh 'kubectl apply -f frontend/mockserver.yaml'
//             }
            
//       }
//     }
//  }  
 }
}